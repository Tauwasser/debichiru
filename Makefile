BUILD := build

MD5 := md5sum -c
PYTHON := python
PYTHON3 := python3.6

RGBASM := rgbasm
RGBGFX := rgbgfx
RGBLINK := rgblink
RGBFIX := rgbfix

RGBASMFLAGS := -h -E -i $(BUILD)/
tools/gfx :=

rwildcard = $(foreach d, $(wildcard $1*), $(filter $(subst *, %, $2), $d) $(call rwildcard, $d/, $2))

DIRS := home engine data audio
OBJS := \
	main.o \
	hram.o \
	wram.o

OBJS += $(patsubst %.asm, %.o, $(call rwildcard, $(DIRS), *.asm))

# aka10 aka11 shiro10
VERSIONS := kuro10
ROMS := 

$(foreach v, $(VERSIONS), $(eval OBJS_$v := $$(addprefix $$(BUILD)/$v/, $$(OBJS))))
$(foreach v, $(VERSIONS), $(eval OBJS_ALL += $$(OBJS_$v)))
$(foreach v, $(VERSIONS), $(eval ROMS += $v.gbc))
$(BUILD)/kuro10/%.o: RGBASMFLAGS += -DKURO
$(BUILD)/aka10/%.o: RGBASMFLAGS += -DAKA
$(BUILD)/aka11/%.o: RGBASMFLAGS += -DAKA -DV11=0
$(BUILD)/shiro10/%.o: RGBASMFLAGS += -DSHIRO

kuro10.gbc: RGBFIX_FLAGS=-i BHEJ -n 0 -t "DEBITIRU B" -c
aka10.gbc: RGBFIX_FLAGS=-i BHNJ -n 0 -t "DEBITIRU R" -c
aka11.gbc: RGBFIX_FLAGS=-i BHNJ -n 1 -t "DEBITIRU R" -c
shiro10.gbc: RGBFIX_FLAGS=-i BHWJ -n 0 -t "DEBITIRU W" -C

.SECONDEXPANSION:

.PHONY: all
all: $(ROMS)

# Remove files generated by the build process.
.PHONY: clean
clean:
	rm -rf $(ROMS) $(BUILD) $(ROMS:.gbc=.sym) $(ROMS:.gbc=.map) $(ROMS:.gbc=_coverage.png) $(ROMS:.gbc=_coverage.log)
	"$(MAKE)" -C tools clean

# Remove files except for graphics.
.PHONY: mostlyclean
mostlyclean:
	rm -rf $(ROMS) $(OBJS_ALL) $(ROMS:.gbc=.sym) $(ROMS:.gbc=.map)
	find . \( -iname '*.d' \) -exec rm {} +

.PHONY: compare
compare: $(ROMS)
	@$(MD5) roms.md5

.PHONY: coverage
coverage: $(ROMS)
	$(foreach f, $^, $(PYTHON3) tools/disasm_coverage.py -m $(f:.gbc=.map) -o $(f:.gbc=_coverage.png) -r $(f:.gbc=_base.gbc) -s $(f:.gbc=_coverage.log) -b 0x80;)

.PHONY: tools
tools tools/pkmncompress tools/gfx tools/make_shim:
	"$(MAKE)" -C tools/

$(ROMS): %.gbc: $$(OBJS_$$*)
	$(RGBLINK) -d -n $(@:.gbc=.sym) -m $(@:.gbc=.map) -O $*_base.gbc -o $@ $^
	$(RGBFIX) -f lh -k EB -l 0x33 -m 0x1B -p 0 -r 3 $(RGBFIX_FLAGS) $@

$(BUILD)/%/shim.asm: shim_%.sym tools/make_shim | $$(dir $$@)
	tools/make_shim -w $< > $@
$(BUILD)/%/shim.o: $(BUILD)/%/shim.asm | $$(dir $$@)
	$(RGBASM) $(RGBASMFLAGS) -M $(@:.o=.d) $(OUTPUT_OPTION) $<

$(foreach v, $(VERSIONS), $(eval $$(BUILD)/$v/gfx.o: | $$(GFX)))
$(foreach v, $(VERSIONS), $(eval \
$$(BUILD)/$v/%.o: %.asm | $$$$(dir $$$$@) ; \
	$$(RGBASM) $$(RGBASMFLAGS) -M $$(@:.o=.d) $$(OUTPUT_OPTION) $$< \
))

.PRECIOUS: %/
%/:
	mkdir -p $@

#$($(basename $(notdir $@))_FLAGS)
test:
	echo $@


-include $(call rwildcard, $(BUILD)/, *.d)